--table for Attendee
CREATE TABLE Attendee (
	aID int NOT NULL,
	pronoun varchar (20),
	FirstName varchar(50),
	LastName varchar(50) NOT NULL,
	dietaryRestrictions varchar (10),
	shirtSize int,
	PRIMARY KEY (aID)
);

--table for Delegate
CREATE TABLE Delegate (
	aID int NOT NULL,
	university varchar (100),
	major varchar (50),
	province varchar(20),
	PRIMARY KEY (aID),
	Foreign KEY (aID) REFERENCES Attendee 
);

--table for Organizer
CREATE TABLE Organizer (
	aID int NOT NULL,
	role varchar(20),  
	PRIMARY KEY (aID),
	Foreign KEY (aID) REFERENCES Attendee 
);

--table for Speaker
CREATE TABLE Speaker (
	aID int NOT NULL,
	orgName varchar(20),  
	talkId int NOT NULL,
	PRIMARY KEY (aID),
	Foreign KEY (aID) REFERENCES Attendee,
	Foreign KEY (talkId) REFERENCES Talk
);

--table for Sponsor
CREATE TABLE Sponsor (
	aID int NOT NULL,  
	companyId int NOT NULL,
	PRIMARY KEY (aID, companyId),
	Foreign KEY (aID) REFERENCES Attendee,
	Foreign KEY (companyId) REFERENCES Company
);

--table for Company
CREATE TABLE Company (
	cname int NOT NULL,
	tier varchar(20),  
	workshopId int NOT NULL,
	PRIMARY KEY (cname),
	Foreign KEY (workshopId) REFERENCES Workshop
);

--table for CompanySponsors
CREATE TABLE CompanySponsors(
	companyId int NOT NULL,
	sponsorId int NOT NULL, 
	FOREIGN KEY (companyId) REFERENCES Company,
	FOREIGN KEY (sponsorId) REFERENCES Sponsors
);

--table for TimeSlot
CREATE TABLE TimeSlot (
	startTime time, 
	endTime time, 
	shiftDate date,
	PRIMARY KEY (startTime, endTime, shiftDate)
);

--table for EventLocation
CREATE TABLE Location(
	lname varchar (20) NOT NULL,
	capacity int,
	event varchar (30),
	PRIMARY KEY (lname)
);

--table for Events
CREATE TABLE Event (
	eID int NOT NULL, 
	title varchar (30),
	timeSlotId int NOT NULL,
	locationId int NOT NULL,
	PRIMARY KEY (eID),
	FOREIGN KEY (timeSlotId) references TimeSlot,
	FOREIGN KEY (locationId) references Location
);

--table for LocationAtTimeSlot
CREATE TABLE LocationAtTimeSlot (
	locationId varchar (20), 
	timeSlotId time,
	FOREIGN KEY (locationId) references Location,
	FOREIGN KEY (timeSlotId) references TimeSlot
);

--table for Interview
--An interview is must be exactly between one delegate and a sponsor (participation constraint) 
CREATE TABLE Interview (
	eID int NOT NULL, 
	delegateId int, 
	sponsorId int, 
	PRIMARY KEY (eID),
	FOREIGN KEY (eID) references Events,
	FOREIGN KEY (delegateId) references Delegate,
	FOREIGN KEY (sponsorId) references Sponsor
);

--table for Workshop
CREATE TABLE Workshop (
	eID int NOT NULL, 
	title varchar(30), 
	sponsorId int, 
	PRIMARY KEY (eID),
	FOREIGN KEY (eId) references Event,
	FOREIGN KEY (sponsorId) references Sponsor
);

--table for Talk
CREATE TABLE Talk (
	eID int NOT NULL, 
	title varchar (30), 
	speakerId int,
	Primary Key (eID),
	FOREIGN KEY (eID) references Event,
	FOREIGN KEY (speakerId) references Speaker
);

--table for Task
CREATE TABLE Task (
	tID int NOT NULL, 
	description varchar(30), 
	deadline timestamp, 
	status  varchar (10),
	PRIMARY KEY (tID)
);

--table for OrganizerTasks
CREATE TABLE OrganizerTasks(
	organizerId int, 
	taskId int,
	FOREIGN KEY (organizerId) references Organizer,
	FOREIGN KEY (taskId) references Task
);

--table for HotelBooking
CREATE TABLE HotelBooking (
	hID int NOT NULL, 
	roomNumber int, 
	capacity int,
	PRIMARY KEY (hID)
);

--table for AttendeeHotelBookings
CREATE TABLE AttendeeHotelBookings(
	aID int,
	roomNumber int, 
	PRIMARY KEY (aID),
	FOREIGN KEY (roomNumber) references HotelBooking,
	FOREIGN KEY (aID) references Attendee
);


